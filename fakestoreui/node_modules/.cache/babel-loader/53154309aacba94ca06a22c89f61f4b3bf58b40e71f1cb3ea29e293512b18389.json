{"ast":null,"code":"import _objectSpread from\"C:/Users/Rama Krishna/fakestoreapi/fakestoreui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{configureStore,createSlice}from\"@reduxjs/toolkit\";const cartSlice=createSlice({name:\"cart\",initialState:{items:JSON.parse(localStorage.getItem(\"cartItems\"))||[]},reducers:{addToCart:(state,action)=>{const existingItem=state.items.find(item=>item.id===action.payload.id);if(existingItem){existingItem.quantity+=1;}else{state.items.push(_objectSpread(_objectSpread({},action.payload),{},{quantity:1}));// Add new item with quantity = 1\n}localStorage.setItem(\"cartItems\",JSON.stringify(state.items));},increaseQuantity:(state,action)=>{const item=state.items.find(item=>item.id===action.payload);if(item){item.quantity+=1;}localStorage.setItem(\"cartItems\",JSON.stringify(state.items));},decreaseQuantity:(state,action)=>{const item=state.items.find(item=>item.id===action.payload);if(item&&item.quantity>1){item.quantity-=1;}else{state.items=state.items.filter(item=>item.id!==action.payload);}localStorage.setItem(\"cartItems\",JSON.stringify(state.items));},removeFromCart:(state,action)=>{state.items=state.items.filter(item=>item.id!==action.payload);localStorage.setItem(\"cartItems\",JSON.stringify(state.items));}}});export const{addToCart,increaseQuantity,decreaseQuantity,removeFromCart}=cartSlice.actions;const store=configureStore({reducer:{cart:cartSlice.reducer}});export default store;","map":{"version":3,"names":["configureStore","createSlice","cartSlice","name","initialState","items","JSON","parse","localStorage","getItem","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","_objectSpread","setItem","stringify","increaseQuantity","decreaseQuantity","filter","removeFromCart","actions","store","reducer","cart"],"sources":["C:/Users/Rama Krishna/fakestoreapi/fakestoreui/src/Fakestore-Components/store.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: JSON.parse(localStorage.getItem(\"cartItems\")) || [],\r\n    },\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            const existingItem = state.items.find(item => item.id === action.payload.id);\r\n            if (existingItem) {\r\n                existingItem.quantity += 1; \r\n            } else {\r\n                state.items.push({ ...action.payload, quantity: 1 }); // Add new item with quantity = 1\r\n            }\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.items));\r\n        },\r\n        increaseQuantity: (state, action) => {\r\n            const item = state.items.find(item => item.id === action.payload);\r\n            if (item) {\r\n                item.quantity += 1;\r\n            }\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.items));\r\n        },\r\n        decreaseQuantity: (state, action) => {\r\n            const item = state.items.find(item => item.id === action.payload);\r\n            if (item && item.quantity > 1) {\r\n                item.quantity -= 1;\r\n            } else {\r\n                state.items = state.items.filter(item => item.id !== action.payload);\r\n            }\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.items));\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            state.items = state.items.filter(item => item.id !== action.payload);\r\n            localStorage.setItem(\"cartItems\", JSON.stringify(state.items));\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addToCart, increaseQuantity, decreaseQuantity, removeFromCart } = cartSlice.actions;\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        cart: cartSlice.reducer,\r\n    },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"mIAAA,OAASA,cAAc,CAAEC,WAAW,KAAQ,kBAAkB,CAE9D,KAAM,CAAAC,SAAS,CAAGD,WAAW,CAAC,CAC1BE,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,CACVC,KAAK,CAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAI,EAC5D,CAAC,CACDC,QAAQ,CAAE,CACNC,SAAS,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC1B,KAAM,CAAAC,YAAY,CAAGF,KAAK,CAACP,KAAK,CAACU,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC,CAC5E,GAAIH,YAAY,CAAE,CACdA,YAAY,CAACK,QAAQ,EAAI,CAAC,CAC9B,CAAC,IAAM,CACHP,KAAK,CAACP,KAAK,CAACe,IAAI,CAAAC,aAAA,CAAAA,aAAA,IAAMR,MAAM,CAACK,OAAO,MAAEC,QAAQ,CAAE,CAAC,EAAE,CAAC,CAAE;AAC1D,CACAX,YAAY,CAACc,OAAO,CAAC,WAAW,CAAEhB,IAAI,CAACiB,SAAS,CAACX,KAAK,CAACP,KAAK,CAAC,CAAC,CAClE,CAAC,CACDmB,gBAAgB,CAAEA,CAACZ,KAAK,CAAEC,MAAM,GAAK,CACjC,KAAM,CAAAG,IAAI,CAAGJ,KAAK,CAACP,KAAK,CAACU,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAAC,CACjE,GAAIF,IAAI,CAAE,CACNA,IAAI,CAACG,QAAQ,EAAI,CAAC,CACtB,CACAX,YAAY,CAACc,OAAO,CAAC,WAAW,CAAEhB,IAAI,CAACiB,SAAS,CAACX,KAAK,CAACP,KAAK,CAAC,CAAC,CAClE,CAAC,CACDoB,gBAAgB,CAAEA,CAACb,KAAK,CAAEC,MAAM,GAAK,CACjC,KAAM,CAAAG,IAAI,CAAGJ,KAAK,CAACP,KAAK,CAACU,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAAC,CACjE,GAAIF,IAAI,EAAIA,IAAI,CAACG,QAAQ,CAAG,CAAC,CAAE,CAC3BH,IAAI,CAACG,QAAQ,EAAI,CAAC,CACtB,CAAC,IAAM,CACHP,KAAK,CAACP,KAAK,CAAGO,KAAK,CAACP,KAAK,CAACqB,MAAM,CAACV,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAAC,CACxE,CACAV,YAAY,CAACc,OAAO,CAAC,WAAW,CAAEhB,IAAI,CAACiB,SAAS,CAACX,KAAK,CAACP,KAAK,CAAC,CAAC,CAClE,CAAC,CACDsB,cAAc,CAAEA,CAACf,KAAK,CAAEC,MAAM,GAAK,CAC/BD,KAAK,CAACP,KAAK,CAAGO,KAAK,CAACP,KAAK,CAACqB,MAAM,CAACV,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKJ,MAAM,CAACK,OAAO,CAAC,CACpEV,YAAY,CAACc,OAAO,CAAC,WAAW,CAAEhB,IAAI,CAACiB,SAAS,CAACX,KAAK,CAACP,KAAK,CAAC,CAAC,CAClE,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEM,SAAS,CAAEa,gBAAgB,CAAEC,gBAAgB,CAAEE,cAAe,CAAC,CAAGzB,SAAS,CAAC0B,OAAO,CAElG,KAAM,CAAAC,KAAK,CAAG7B,cAAc,CAAC,CACzB8B,OAAO,CAAE,CACLC,IAAI,CAAE7B,SAAS,CAAC4B,OACpB,CACJ,CAAC,CAAC,CAEF,cAAe,CAAAD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}